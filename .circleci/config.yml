version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7.13

    working_directory: ~/checkpointII

    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
          
  test:
    working_directory: ~/checkpointII
    docker:
      - image: circleci/python:2.7.13
        environment:
         APP_SETTINGS: testing
         DATABASE_URL: postgresql://circleci@localhost/circlecidb
         DEV_SECRET_KEY: SECRETKEY
         APP_SETTING: development

      - image: circleci/postgres:9.6
        environment:
          POSTGRES_DB: circlecidb
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: ''

    steps:
      - checkout
      - run: mkdir reports
      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-

      - run:
         name: confirm postgres is up
         command: |
           count=0
           while [ $count -lt 12 ] ; do
              if exec 10<>/dev/tcp/127.0.0.1/5432; then
                echo "Hey, postgres is up"
                break
              fi
              sleep 5
              count=$((count + 1))
           done
           if [ $count -eq 12 ]; then
             echo "Postgres is still down!"
             exit 1
           fi
      # run tests!
      - run:
          name: run tests
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt
            nosetests --with-coverage
      - store_artifacts:
          path: reports
          destination: reports

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build